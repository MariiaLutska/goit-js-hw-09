{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAgBeC,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAqBC,GACnBA,EAAMC,iBACN,IAAIC,EAASC,OAAOH,EAAMI,OAAOC,MAAMC,OACnCC,EAAUJ,OAAOH,EAAMI,OAAOI,OAAOF,OACrCG,EAAQN,OAAOH,EAAMI,OAAOM,KAAKJ,OACrC,GAAIJ,EAAS,GAAKK,EAAU,EAC1B,OAAOI,EAAAhB,GAASiB,OAAOC,KAAK,gCAE9B,MAAMC,EAAc,GACpB,IAAK,IAAIC,EAAY,EAAGA,GAAaR,EAASQ,GAAa,EACzDD,EAAYE,KAAK,CAAEC,SAAUF,EAAWV,MAAOH,IAC/CA,GAAUO,EAGZK,EAAYI,SAAQC,IA9BtB,IAAuBF,EAAUZ,GAAVY,EA+BLE,EAAKF,SA/BUZ,EA+BAc,EAAKd,MA9B7B,IAAIe,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBJ,QAAiBZ,OAE5CiB,EAAK,sBAAoBL,QAAiBZ,SAE7CA,OAuBAsB,MAAK,KACJhB,EAAAhB,GAASiB,OAAOgB,QAAQ,uBAAqBT,EAAIF,eAAkBE,EAAEd,UAAc,CAC/EwB,SAAO,EACTC,QAAS,SAGZC,OAAM,KACLpB,EAAAhB,GAASiB,OAAOoB,QAAQ,sBAAoBb,EAAEF,eAAkBE,EAAEd,UAAc,CAC9EwB,SAAS,EACTC,QAAS","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormClick);\n\nfunction onFormClick(event) {\n  event.preventDefault();\n  let delayV = Number(event.target.delay.value);\n  let amountV = Number(event.target.amount.value);\n  let stepV = Number(event.target.step.value);\n  if (delayV < 0 || amountV < 0) {\n    return Notiflix.Notify.info('Please enter positive number');\n  }\n  const dataPromise = [];\n  for (let positionV = 1; positionV <= amountV; positionV += 1){\n    dataPromise.push({ position: positionV, delay: delayV });\n    delayV += stepV;\n  }\n\n  dataPromise.forEach(item => {\n    createPromise(item.position, item.delay)\n      .then(() => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${item.position} in ${item.delay}ms`, {\n          useIcon: false,\n          timeout: 5000,\n        });\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${item.position} in ${item.delay}ms`, {\n          useIcon: false,\n          timeout: 5000,\n        });\n      });\n  });\n}\n\n\n\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","event","preventDefault","delayV","Number","target","delay","value","amountV","amount","stepV","step","$parcel$interopDefault","Notify","info","dataPromise","positionV","push","position","forEach","item","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","success","useIcon","timeout","catch","failure"],"version":3,"file":"03-promises.208a5a52.js.map"}